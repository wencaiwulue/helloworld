name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:    
  run-job:
    runs-on: ubuntu-latest
    steps:
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v1
    - id: job
      name: run job
      run: |
        echo ${{ secrets.kube_config }} | base64 -d >> config
        cat <<EOF>>pod.json
        {"apiVersion":"v1","kind":"Pod","metadata":{"name":"NAME","namespace":"test"},"spec":{"restartPolicy":"Never","containers":[{"name":"test","image":"naison/test:latest","env":[{"name":"COMMIT_ID","value":"COMMITID"}],"volumeMounts":[{"name":"kubeconfig","mountPath":"~/.kube","subPath":"config"}]}],"volumes":[{"name":"kubeconfig","hostPath":{"path":"PATH"}}]}}
        EOF
        sed -i "s#PATH#$(pwd)#g" pod.json
        sed -i "s/COMMITID/${GITHUB_SHA}/g" pod.json
        sed -i "s/NAME/${GITHUB_SHA}/g" pod.json
        cat pod.json
        cat pod.json | kubectl create -f - --kubeconfig=config
        kubectl wait --for=condition=Ready --timeout=5m pod/${GITHUB_SHA} -n test --kubeconfig=config
        kubeclt logs pods/${GITHUB_SHA} -n test -f --kubeconfig=config || true
  logs:
    runs-on: ubuntu-latest
    needs: run-job
    steps:
    - uses: nickgronow/kubectl@v1.17.4
      with:
        config_data: ${{ secrets.kube_config }}
        args: 'wait --for=condition=complete --timeout=1h pod/${GITHUB_SHA} -n test'
  clean:
    runs-on: ubuntu-latest
    if: always()
    needs: run-job
    steps:
    - uses: nickgronow/kubectl@v1.17.4
      with:
        config_data: ${{ secrets.kube_config }}
        args: 'delete pod ${GITHUB_SHA} -n test'
