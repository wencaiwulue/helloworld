name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:    
  prepare:
    runs-on: ubuntu-latest
    steps:
    - id: commit_id
      name: get commit id
      run: 
        echo "::set-output name=id::$(git rev-parse HEAD)"
    - name: create configmap
      uses: nickgronow/kubectl@v1.17.4
      with:
        config_data: ${{ secrets.kube_config }}
        args: 'create configmap commitid -n test --from-literal=id=${{ steps.commit_id.outputs.id }}'
  run-job:
    runs-on: ubuntu-latest
    if: always()
    needs: prepare
    steps:
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v1
    - id: commit_id
      name: get commit id
      run: 
        echo "::set-output name=id::$(git rev-parse HEAD)"
    - id: job
      name: run job
      run: |
        echo ${{ secrets.kube_config }} | base64 -d >> config
        cat <<EOF>>pod.json
        {"apiVersion":"v1","kind":"Pod","metadata":{"name":"test","namespace":"test"},"spec":{"restartPolicy":"Never","containers":[{"name":"test","image":"test:latest","env":[{"name":"COMMIT_ID","value":"COMMITID"}],"volumeMounts":[{"name":"kubeconfig","mountPath":"PATH","subPath":"config"}]}],"volumes":[{"name":"kubeconfig","hostPath":{"path":"PATH"}}]}}
        EOF
        sed -i "s/PATH/$(pwd)/g" pod.json
        sed -i "s/COMMITID/$(git rev-parse HEAD)/g" pod.json
        cat pod.json
        cat pod.json | kubectl create -f - --kubeconfig=config
    - uses: nickgronow/kubectl@v1.17.4
      with:
        config_data: ${{ secrets.kube_config }}
        args: 'wait --for=condition=complete --timeout=1h pod/test -n test'
  clean:
    runs-on: ubuntu-latest
    if: always()
    needs: run-job
    steps:
    - uses: nickgronow/kubectl@v1.17.4
      with:
        config_data: ${{ secrets.kube_config }}
        args: 'delete job my-job -n test'
    - uses: nickgronow/kubectl@v1.17.4
      with:
        config_data: ${{ secrets.kube_config }}
        args: 'delete configmap commit_id -n test'
