name: k8s

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  workflow_run:
    workflows: [ "k3s" ]
    types: [ completed ]

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2.3.4
        timeout-minutes: 10
      - name: git tag
        timeout-minutes: 60
        run: |
          git tag | tail -2
          echo $(git tag list)
  kind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        timeout-minutes: 10
      - uses: engineerd/setup-kind@v0.5.0
        timeout-minutes: 10
      - name: Waiting for images to be ready
        timeout-minutes: 60
        run: |
          COMMIT_ID=6af9f631a320396481bfb74242236054a9deb2e6
          ProjectId=7955264
          Token=4c13feee6b91d7c2d9ebdb7e4a5aaaf48cf27a3b
          while true; do
            url='https://codingcorp-generic.pkg.coding.net/nocalhost/nhctl/nhctl-linux-amd64?version='$COMMIT_ID''
            echo "url: ""$url"
            a=$(curl -s "$url")
            echo "response: ""$a"
            if [[ $a =~ "File not found" ]]; then
              sleep 5
            else
              break
            fi
          done
          function wait() {
            Action=$1
            Repository=$2
            Package=$3
            PackageVersion=$4
            while true; do
              res=$(curl -X POST -s 'https://codingcorp.coding.net/open-api' \
                --header 'Authorization: token '$Token'' \
                --header 'Content-Type: text/plain' \
                --data-raw '{
                "Action": "'"$Action"'",
                "ProjectId": '$ProjectId',
                "Repository": "'"$Repository"'",
                "Package": "'"$Package"'",
                "PackageVersion": "'"$PackageVersion"'"
              }')
              echo "wait for package: ""$Package""version: ""$PackageVersion"
              echo "response: ""$res"
              if [[ $res =~ "InstanceSet" ]]; then
                break
              else
                sleep 5
              fi
            done
          }
          echo 'wait for testcase'
          wait "DescribeArtifactProperties" "public" "testcase" $COMMIT_ID
          echo 'wait for nocalhost-api'
          wait "DescribeArtifactProperties" "public" "nocalhost-api" $COMMIT_ID
          echo 'wait for nocalhost-dep'
          wait "DescribeArtifactProperties" "public" "nocalhost-dep" $COMMIT_ID
      - name: Kubernetes info
        timeout-minutes: 5
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          cat ~/.kube/config
          ls -lah ~/.kube/config
          cd ~/.kube/
          pwd
      - name: Testing
        timeout-minutes: 60
        run: |
          SHA=6af9f631a320396481bfb74242236054a9deb2e6
          
          kubectl create namespace test || true
          IMAGE=codingcorp-docker.pkg.coding.net/nocalhost/public/testcase:$SHA
          docker run -d -v /home/runner/.kube/config:/root/.kube/config -e COMMIT_ID=$SHA --network host --name $SHA $IMAGE
          docker logs $SHA -f || true
          docker ps -a
          ID=$(docker inspect "$(docker ps -aq --filter name=$SHA)" --format='{{.State.ExitCode}}') && echo "$ID" | grep '^1$'
